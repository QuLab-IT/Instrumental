<?xml version="1.0" encoding="Windows-1252"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:tocPath="Agilent 33500 Series Operating and Service Guide|SCPI Programming Reference|Programming Examples" MadCap:InPreviewMode="false" MadCap:PreloadImages="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="HtmlHelp" MadCap:PathToHelpSystem="../" MadCap:HelpSystemFileName="Agilent_33500_Series_Operating_and_Service_Guide.xml" MadCap:SearchType="Stem">
    <head><title>Configure an Arbitrary Waveform</title>
        <link rel="StyleSheet" href="../dds_best_rh.css" />
        
        
        
        
        
    </head>
    <body>
        <h1>Configure an arbitrary waveform<a name="kanchor372"></a></h1>
        <p>This section describes the configuration of an arbitrary waveform.</p>
        <h2>Description
        </h2>
        <p class="IndentTight">A user-created arbitrary waveform has amplitude, offset, sample rate, and filter type. These can be set when the arbitrary waveform file (.arb or .barb extension) is loaded into waveform memory.  The beginning of a typical arbitrary waveform is shown below; note that amplitude and offset are represented by high and low voltage values: </p>
        <p class="Shaded">File Format:1.10<br />Checksum:0 <br />Channel Count:1<br />Sample Rate:20000.000000<br />High Level:2.000000<br />Low Level:0.000000<br />Marker Point:50<br />Data Type:"short"<br />Filter:"off"<br />Data Points:100<br />Data:<br />23259<br />23114<br /></p>
        <p class="IndentTight">The <b>23259</b> and <b>23114</b> lines after the <b>Data:</b> line are ASCII DAC codes representing the first two waveform data values. If the waveform's DAC&#160;codes do not range from -32767 to + 32767, the output amplitude is asymmetric.</p>
        <p class="IndentTight">In firmware revisions 1.12 and before, the instrument did not update waveform metadata (sample rate, voltage range, and filter setting) when switching from one arbitrary waveform to another. The new arbitrary waveform adopted the metadata of the waveform already in memory. Therefore, an arbitrary waveform designed to play at one voltage range,  sample rate, and filter setting  (as specified in the waveform’s metadata) was changed to another set of metadata. After firmware revision 1.12, arbitrary waveforms load any metadata present in the arbitrary waveform file, so that they play the way they previously played.</p>
        <p class="IndentTight">Built-in waveforms make few or no changes when loaded into waveform memory.  They play according to the instrument’s current configuration.  For example, see the beginning of Haversine.arb, shown below.  </p>
        <p class="Shaded">Copyright: Agilent Technologies, 2010<br />File Format:1.0<br />Channel Count:1<br />Data Points:40<br />Data:<br />0<br />202<br />802</p>
        <p class="IndentTight">Because of the missing metadata, the current settings for voltage range, sample rate, and filter setup are used.</p>
        <h2>Example</h2>
        <p class="IndentTight">The following code loads and modifies a built-in arbitrary waveform.</p>
        <p class="Shaded">FUNCtion ARB<br />VOLTage +3<br />VOLTage:OFFSet +1<br />FUNC:ARB:SRAT 1E5<br />FUNCtion:ARBitrary "INT:\BUILTIN\EXP_RISE.ARB"<br />OUTPut 1</p>
        <p class="IndentTight">The waveform resulting from these commands is shown below.</p>
        <p class="IndentTight">
            <img src="../_Graphics_/Arbitrary.png" />
        </p>
        
    </body>
</html>