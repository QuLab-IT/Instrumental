<?xml version="1.0" encoding="Windows-1252"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:tocPath="Agilent 33500 Series Operating and Service Guide|SCPI Programming Reference|Alphabetical List of SCPI Commands and Queries" MadCap:InPreviewMode="false" MadCap:PreloadImages="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="HtmlHelp" MadCap:PathToHelpSystem="../" MadCap:HelpSystemFileName="Agilent_33500_Series_Operating_and_Service_Guide.xml" MadCap:SearchType="Stem">
    <head>
        <link href="../RegTable.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../RegTable.css" rel="stylesheet" MadCap:stylesheetType="table" /><title>MMEMory Subsystem</title>
        <link rel="StyleSheet" href="../dds_best_rh.css" />
        
        
        
        
        
    </head>
    <body>
        <h1>MMEMory Subsystem<a name="kanchor222"></a></h1>
        <p>The MMEMory subsystem manages the file system in the instrument or on an external USB file system. The file system can store and load several file formats.</p>
        <p>The "INT:\" flash memory file system inside the instrument is always present. If a USB file storage device (sometimes called a flash drive, thumb drive, or jump drive) is plugged into the front-panel USB port,  it appears as "USB:\" to the instrument.</p>
        <h2>Example</h2>
        <p>The following code produces the sequence shown below.</p>
        <p class="Shaded">FUNC:ARB:SRATE 10E3<br />FUNC:ARB:FILTER OFF<br />FUNC:ARB:PTPEAK 10<br />DATA:ARB dc_ramp, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.4, 0.6, 0.8, 1.0<br />DATA:ARB dc5v, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0<br />DATA:ARB dc2_5v, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5<br />DATA:ARB dc0v, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0<br />DATA:SEQuence #3128"seqExample","dc_ramp",0,once,highAtStart,5,"dc5v",2,repeat,maintain,5,<br />&#160;&#160;&#160;&#160;&#160;"dc2_v",2,repeat,lowAtStart,5,"dc0v",2,repeat,maintain,5<br />FUNC:ARB dc_ramp<br />MMEM:STORE:DATA "INT:\dc_ramp.arb"<br />FUNC:ARB dc5v<br />MMEM:STORE:DATA "INT:\dc5v.arb"<br />FUNC:ARB dc2_5v<br />MMEM:STORE:DATA "INT:\dc2_5.arb"<br />FUNC:ARB dc0v<br />MMEM:STORE:DATA "INT:\dc0v.arb"<br />FUNC:ARB seqExample<br />MMEM:STORE:DATA "INT:\seqExample.seq"<br />DATA:VOL:CLEAR	&lt;--- erase all waveforms to show LOAD will restore all waveforms<br />MMEM:LOAD:DATA "INT:\seqExample.seq"<br />FUNC ARB<br />FUNC:ARB "INT:\seqExample.seq"<br />OUTPUT ON</p>
        <p />
        <p>The seqExample.seq file is as shown below:</p>
        <p class="Shaded">File Format:1.10<br />Sample Rate:10000.000000<br />High Level:5.000000<br />Low Level:0.000000<br />Filter:"off"<br />Header:Arb Name, Repeat Count, Play Control,Marker Mode, Marker Point<br />dc_ramp.arb,1,"once","highAtStart",5<br />dc5v.arb,2,"repeat","maintain",5<br />dc2_5v.arb,2,"repeat","lowAtStart",5<br />dc0v.arb,2,"repeat","maintain",5</p>
        <p>
            <img src="../MMEM%20Subsystem.png" style="width: 308px;height: 202px;" alt="MMEM Subsystem" />
        </p>
        <h2>Commands and Queries</h2>
        <p>The MMEMory subsystem includes the following commands and queries.</p>
        <p class="IndentTight"><a href="#MMEMory_CATalog">MMEMory:CATalog:ALL?</a>  - lists available and used space and files on Mass Memory device</p>
        <p class="IndentTight"><a href="#MMEMory_CATalog_DATA_ARBitrary">MMEMory:CATalog:DATA:ARBitrary?</a> - lists arbitrary waveforms and sequences on Mass Memory device</p>
        <p class="IndentTight"><a href="#MMEMory_CATalog_STATe">MMEMory:CATalog:STATe?</a> - lists available and used space and state (*.sta) files present on Mass Memory device</p>
        <p class="IndentTight"><a href="#MMEMory_CDIRectory">MMEMory:CDIRectory</a> - changes to a directory</p>
        <p class="IndentTight"><a href="#MMEMory_COPY">MMEMory:COPY</a> - copies a file on Mass Memory device</p>
        <p class="IndentTight"><a href="#MMEMory_COPY_SEQuence">MMEMory:COPY:SEQuence</a> - copies a sequence and its associated arbitrary waveforms on Mass Memory device</p>
        <p class="IndentTight"><a href="#MMEMory_DELete">MMEMory:DELete</a> - removes files from Mass Memory device</p>
        <p class="IndentTight"><a href="#MMEMory_DOWNload_DATA">MMEMory:DOWNload:DATA</a> - downloads data from the host computer to instrument's Mass Memory</p>
        <p class="IndentTight"><a href="#MMEMory_DOWNload_FNAMe">MMEMory:DOWNload:FNAMe</a> - specifies file name for downloading data from the computer to instrument's Mass Memory</p>
        <p class="IndentTight"><a href="#MMEMory_LOAD_ALL">MMEMory:LOAD:ALL</a> - loads  instrument state file</p>
        <p class="IndentTight"><a href="#MMEMory_LOAD_DATA">MMEMory:LOAD:DATA[1|2]</a> - loads arbitrary waveform from file</p>
        <p class="IndentTight"><a href="#MMEMory_LOAD_LIST">MMEMory:LOAD:LIST[1|2]</a> - loads frequency list  from file</p>
        <p class="IndentTight"><a href="#MMEMory_LOAD_STATe">MMEMory:LOAD:STATe</a> - loads saved instrument state from file</p>
        <p class="IndentTight"><a href="#MMEMory_MDIRectory">MMEMory:MDIRectory</a> - makes a new directory (folder)</p>
        <p class="IndentTight"><a href="#MMEMory_MOVE">MMEMory:MOVE</a> - moves a file on Mass Memory device</p>
        <p class="IndentTight"><a href="#MMEMory_RDIRectory">MMEMory:RDIRectory</a> - removes a directory</p>
        <p class="IndentTight"><a href="#MMEMory_STORe_ALL">MMEMory:STORe:ALL</a> - saves instrument state file</p>
        <p class="IndentTight"><a href="#MMEMory_STORe_DATA">MMEMory:STORe:DATA[1|2]</a> - saves arbitrary waveform to file</p>
        <p class="IndentTight"><a href="#MMEMory_STORe_LIST">MMEMory:STORe:LIST</a> - saves active frequency list to file</p>
        <p class="IndentTight"><a href="#MMEMory_STORe_STATe">MMEMory:STORe:STATe</a> - stores instrument state to file</p>
        <p class="IndentTight"><a href="#MMEMory_UPLoad">MMEMory:UPLoad</a> - uploads contents of a file from instrument to host computer</p>
        <h2>Folder and file formats</h2>
        <p>Many MMEMory commands refer to folders and files. These have specific structures, described below.</p>
        <h3>Format for a &lt;<i>folder</i>&gt;</h3>
        <ul type="disc" class="UL_Disc">
            <li class="IndentTight" value="1">The format for &lt;<i>folder</i>&gt; is "&lt;<i>drive</i>&gt;:&lt;<i>path</i>&gt;", where &lt;<i>drive</i>&gt; can be INTernal or USB, and &lt;<i>path</i>&gt; is an absolute folder path.</li>
            <li class="IndentTight2" value="2">INTernal specifies the internal flash file system.USB specifies a front panel USB storage device.</li>
            <li class="IndentTight2" value="3">Absolute paths begin with "\" or "/" and start at the root folder of &lt;<i>drive</i>&gt;.</li>
            <li class="IndentTight2" value="4">The folder name specified in &lt;<i>path</i>&gt; cannot exceed 240 characters.</li>
            <li class="IndentTight2" value="5">The specified folder must exist and cannot be marked hidden or system.</li>
            <li class="IndentTight2" value="6">If &lt;<i>drive</i>&gt;:&lt;<i>path</i>&gt; is omitted, the folder specified by <a href="#MMEMory_CDIRectory">MMEMory:CDIRectory</a> is used.</li>
            <li class="IndentTight2" value="7">If &lt;<i>drive</i>&gt; is omitted:</li>
            <li class="IndentTight3" value="8">The path is treated as a relative path and appended to the folder specified by <a href="#MMEMory_CDIRectory">MMEMory:CDIRectory</a>.</li>
            <li class="IndentTight3" value="9">Absolute paths are NOT allowed.</li>
        </ul>
        <h3>Format for a &lt;<i>file</i>&gt;</h3>
        <ul type="disc" class="UL_Disc">
            <li class="IndentTight" value="1">The format for &lt;<i>file1</i>&gt; and &lt;<i>file2</i>&gt; is "[&lt;<i>drive</i>&gt;:&lt;<i>path</i>&gt;]&lt;<i>file_name</i>&gt;", where &lt;<i>drive</i>&gt; can be INTernal or USB, and &lt;<i>path</i>&gt; must be an absolute folder path.</li>
            <li class="IndentTight2" value="2">INTernal specifies the internal flash file system.USB specifies a front panel USB storage device.</li>
            <li class="IndentTight2" value="3">If &lt;<i>drive</i>&gt;:&lt;<i>path</i>&gt; is omitted, the folder specified by <a href="#MMEMory_CDIRectory">MMEMory:CDIRectory</a> is used.</li>
            <li class="IndentTight2" value="4">Absolute paths begin with "\" or "/" and start at the root folder of &lt;<i>drive</i>&gt;.</li>
            <li class="IndentTight2" value="5">Folder and file names cannot contain the following characters: \ / : * ? " &lt; &gt; |</li>
            <li class="IndentTight2" value="6">The combination of folder and file name cannot exceed 240 characters.</li>
            <li class="IndentTight2" value="7">The source file and folder and the destination folder must exist and cannot be marked hidden or system.</li>
            <li class="IndentTight2" value="8">If the destination file exists, it is overwritten, unless marked as hidden or system.</li>
            <li class="IndentTight2" value="9">If &lt;<i>drive</i>&gt; is omitted:</li>
            <li class="IndentTight3" value="10">The path is treated as a relative path and appended to the folder specified by <a href="#MMEMory_CDIRectory">MMEMory:CDIRectory</a>.</li>
            <li class="IndentTight3" value="11">Absolute paths are NOT allowed.</li>
        </ul>
        <h2>Mass Memory (MMEMory) and State Storage</h2>
        <p class="IndentTight">The front panel uses the MMEM subsystem, not the MEM subsystem, to save states. If you save a state with the front panel, you can still access it with SCPI.  However, a state saved into the MEM subsystem via SCPI using *SAV  cannot be retrieved from the front panel.</p>
        <p class="IndentTight">For example, configure the instrument as desired and insert a USB drive into the front panel. Then enter the following commands. If you do not have a USB drive change "USB:\" to "INT:\" to use the instrument's internal flash drive instead.</p>
        <p class="Shaded">MMEMory:CDIRectory "USB:\"<br />MMEMory:MDIRerctory "States"<br />MMEMory:STORe:STATE "USB:\States\State1"</p>
        <p class="IndentTight">To return to this state at any time:</p>
        <p class="Shaded">MMEMory:LOAD:STATE "USB:\States\State1"</p>
        <p class="IndentTight">You can also recall a state file from the front panel by pressing <b>[System]</b> and then <b>Store/Recall</b>.</p>
        <h2><a name="kanchor223"></a><a name="MMEMory_CATalog"></a>MMEMory:CATalog[:ALL]? [&lt;<i>folder</i>&gt;]</h2>
        <p class="IndentTight">Returns a list of all files in the current mass storage directory, including internal storage and the USB drive.</p>
        <table style="mc-table-style: url('../RegTable.css');caption-side: top;margin-left: 0;margin-right: auto;" class="TableStyle-RegTable" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column1" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Parameter</th>
                    <th class="HeadD-Column1-Header1">Typical Return</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">Any valid folder name; defaults to folder selected by <a href="#MMEMory_CDIRectory">MMEMory:CDIRectory</a></td>
                    <td class="BodyD-Column1-Body1">+1000000000,+327168572,<br />"command.exe,,375808",<br />"MySetup.sta,STAT,8192",<br />"MyWave.csv,ASC,11265"</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyA-Column1-Body1" colspan="2">List all files in the folder MyData on the front panel USB storage device:<br />MMEM:CAT? "USB:\MyData"</td>
                </tr>
            </tbody>
        </table>
        <ul>
            <li class="IndentTight" value="1">The catalog takes the following form:<br /><br />&lt;<i>mem_used</i>&gt;,&lt;<i>mem_free</i>&gt;{,"&lt;<i>file listing</i>&gt;"}<br /><br />The instrument returns two numeric values and a string for each file in the folder. The first numeric value indicates the number of bytes of storage used on the drive. The second indicates the number of bytes of storage available.  Each &lt;<i>file listing</i>&gt; is in the format "&lt;<i>file_name</i>&gt;,&lt;<i>file_type</i>&gt;,&lt;<i>file_size</i>&gt;" (the quotation marks are also returned), where &lt;<i>file_name</i>&gt; is the name of the file including file extension, if any; &lt;<i>file_type</i>&gt; is either STAT for STATe (.sta) files, ASC for DATA (.csv) files, FOLD for folders, or null for all other file extensions; &lt;<i>file_size</i>&gt; is the size of the file in bytes.</li>
            <li class="IndentTight" value="2">If no files exist, only &lt;<i>mem_used</i>&gt;,&lt;<i>mem_free</i>&gt; is returned.</li>
            <li class="IndentTight" value="3">Because the instrument uses a small amount of space in the flash file system for internal use, the &lt;<i>mem_used</i>&gt; value will not be zero even if no user files exist on the drive.</li>
        </ul>
        <h2><a name="kanchor224"></a><a name="MMEMory_CATalog_DATA_ARBitrary"></a>MMEMory:CATalog:DATA:ARBitrary? [&lt;<i>folder</i>&gt;]</h2>
        <p class="IndentTight">Returns a list of all the arbitrary sequence (.seq) files and folders, as well as arbitrary waveform (.arb/.barb) files in a folder.</p>
        <table style="mc-table-style: url('../RegTable.css');caption-side: top;margin-left: 0;margin-right: auto;" class="TableStyle-RegTable" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column1" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Parameter</th>
                    <th class="HeadD-Column1-Header1">Typical Return</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">Any valid folder name; defaults to folder selected by <a href="#MMEMory_CDIRectory">MMEMory:CDIRectory</a></td>
                    <td class="BodyD-Column1-Body1">(see below)</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyA-Column1-Body1" colspan="2">
                        <p class="IndentTight">The following query lists all arbitrary waveform and sequence files at the root level in internal memory.</p>
                        <p class="Shaded">MMEM:CAT:DATA:ARBitrary? "INT:\"</p>
                        <p class="IndentTight">Typical Response:<br /> +1000000000,+327168572,"TestSequence1.seq,NA,223",<br />"TestSequence1.seq,Segment1.arb,1469"",<br />"TestSequence1.seq,Segment2.arb,2356"",<br />"TestSequence1.seq,Segment3.arb,4399"",<br />"NA,Example.arb,2215"</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <ul>
            <li class="IndentTight" value="1">The instrument returns two numeric values and a string for each .seq and .arb/.barb file in the selected folder.  The first numeric value indicates the number of bytes of storage used on the drive. The second indicates the number of bytes of storage available.    Each &lt;file listing&gt; is in the format "&lt;<i>filename</i>&gt;,&lt;<i>file_type</i>&gt;,&lt;<i>file_size</i>&gt;" (the quotation marks are also returned), where &lt;<i>filename</i>&gt; is the name of the file including file extension, if any; &lt;<i>file_type</i>&gt; is FOLD for folders, ARB for arb segments, or SEQUENCE for arb sequence files; &lt;<i>file_size</i>&gt; is the size of the file in bytes.</li>
            <li class="IndentTight" value="2">If no .seq, .arb, or .barb files exist, only &lt;<i>mem_used</i>&gt;,&lt;<i>mem_free</i>&gt; is returned.</li>
            <li class="IndentTight" value="3">Because the instrument uses a small amount of space in the flash file system for internal use, the &lt;<i>mem_used</i>&gt; value will not be zero even if no user files exist on the drive.</li>
        </ul>
        <h2><a name="kanchor225"></a><a name="MMEMory_CATalog_STATe"></a>MMEMory:CATalog:STATe? [&lt;<i>folder</i>&gt;]</h2>
        <p class="IndentTight">Lists all state files (.sta file extension) in a folder. </p>
        <table style="mc-table-style: url('../RegTable.css');caption-side: top;margin-left: 0;margin-right: auto;" class="TableStyle-RegTable" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column1" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Parameter</th>
                    <th class="HeadD-Column1-Header1">Typical Return</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">Any valid folder name; defaults to folder selected by <a href="#MMEMory_CDIRectory">MMEMory:CDIRectory</a></td>
                    <td class="BodyD-Column1-Body1">+1000000000,+327168572,"MySetup.sta,STAT,8192"</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyA-Column1-Body1" colspan="2">List all state files in MyData folder on front panel USB drive.<br />MMEM:CAT:STAT? "USB:\MyData"</td>
                </tr>
            </tbody>
        </table>
        <p class="IndentTight">Format for returned catalog:</p>
        <p class="IndentTight">&lt;<i>mem_used</i>&gt;,&lt;<i>mem_free</i>&gt;{,"&lt;<i>file listing</i>&gt;"}</p>
        <p class="IndentTight">The instrument returns two numeric values and a string for each state file in the selected folder.  The first numeric value indicates the number of bytes of storage used on the drive. The second indicates the number of bytes of storage available.  Each &lt;<i>file listing</i>&gt; is in the format "&lt;<i>file_name</i>&gt;,&lt;<i>file_type</i>&gt;,&lt;<i>file_size</i>&gt;" (the quotes are also returned), where &lt;<i>file_name</i>&gt; is the name of the file including file extension, if any; &lt;<i>file_type</i>&gt; is STAT for STATe (.sta) files; &lt;<i>file_size</i>&gt; is the size of the file in bytes.</p>
        <p class="IndentTight">If no state files exist, only &lt;<i>mem_used</i>&gt;,&lt;<i>mem_free</i>&gt; is returned.</p>
        <p class="IndentTight">Because the instrument uses a small amount of space in the flash file system for internal use, the &lt;<i>mem_used</i>&gt; value will not be zero even if no user files exist on the drive.</p>
        <h2><a name="kanchor226"></a><a name="kanchor227"></a><a name="kanchor228"></a><a name="MMEMory_CDIRectory"></a>MMEMory:CDIRectory &lt;<i>folder</i>&gt;<br /><a name="MMEMory_MDIRectory"></a>MMEMory:MDIRectory &lt;<i>folder</i>&gt;<br /><a name="MMEMory_RDIRectory"></a>MMEMory:RDIRectory &lt;<i>folder</i>&gt;<br /></h2>
        <p class="IndentTight">MMEMory:CDIRectory selects the default folder for the MMEMory subsystem commands. This folder must exist and is used when folder or file names do not include a drive and folder name.</p>
        <p class="IndentTight">MMEMory:MDIRectory makes a new directory (folder) on the mass storage medium.</p>
        <p class="IndentTight">MMEMory:RDIRectory removes a directory (folder) on the mass storage medium.</p>
        <table style="mc-table-style: url('../RegTable.css');caption-side: top;margin-left: 0;margin-right: auto;" class="TableStyle-RegTable" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column1" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Parameter</th>
                    <th class="HeadD-Column1-Header1">Typical Return</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">Any directory name, including the mass storage unit specifier, default INT:\</td>
                    <td class="BodyD-Column1-Body1">"INT:\"</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyA-Column1-Body1" colspan="2">
                        <p colspan="2">Make and remove a new directory named "test" on the internal mass memory system:<br />MMEM:MDIR "test"<br />MMEM:RDIR "test"</p>
                        <p colspan="2">Return the default folder for MMEMory subsystem commands:<br />MMEM:CDIR?</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <ul type="disc" class="UL_Disc">
            <li class="IndentTight" value="1">The instrument resets the default folder to the internal flash file system root directory ("INT:\") after <a href="IEEE-488_Subsystem.htm#RST">*RST</a>.</li>
            <li class="IndentTight" value="2">You can only remove an empty folder (no files). Otherwise, the instrument generates a "Directory not empty" error.</li>
        </ul>
        <h2><a name="kanchor229"></a><a name="MMEMory_COPY"></a>MMEMory:COPY &lt;<i>file1</i>&gt;,&lt;<i>file2</i>&gt;</h2>
        <p class="IndentTight">Copies &lt;<i>file1</i>&gt; to &lt;<i>file2</i>&gt;. The file names must include any file extension..</p>
        <table style="mc-table-style: url('../RegTable.css');caption-side: top;margin-left: 0;margin-right: auto;" class="TableStyle-RegTable" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column1" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Parameter</th>
                    <th class="HeadD-Column1-Header1">Typical Return</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">Both files can be any valid file name</td>
                    <td class="BodyD-Column1-Body1">
                        <p>(none)</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyA-Column1-Body1" colspan="2">Copy the state file MyFreqMeas.sta from the root directory to the folder "Backup" on the internal flash file system.<br />MMEM:COPY "INT:\MySetup.sta","INT:\Backup"</td>
                </tr>
            </tbody>
        </table>
        <ul>
            <li class="IndentTight" value="1">To copy a file to a file of the same name in a different folder, you can specify just the &lt;<i>drive</i>&gt; and/or &lt;<i>path</i>&gt; for &lt;<i>destination</i>&gt;.</li>
        </ul>
        <h2><a name="kanchor230"></a><a name="MMEMory_COPY_SEQuence"></a>MMEMory:COPY:SEQuence &lt;<i>source</i>&gt;,&lt;<i>destination</i>&gt;</h2>
        <p class="IndentTight">Copies a sequence from &lt;<i>source</i>&gt; to &lt;<i>destination</i>&gt;. The file names must include any file extension. Use the extension .seq for text format.</p>
        <table style="mc-table-style: url('../RegTable.css');caption-side: top;margin-left: 0;margin-right: auto;" class="TableStyle-RegTable" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column1" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Parameter</th>
                    <th class="HeadD-Column1-Header1">Typical Return</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">&lt;<i>source</i>&gt; and &lt;<i>destination</i>&gt; may be any valid sequence file name.</td>
                    <td class="BodyD-Column1-Body1">(none)</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyA-Column1-Body1" colspan="2">Copy the sequence file MySequence.seq and all associated segment files specified in the sequence file from internal drive to the folder "Backup" on internal storage.<br />MMEM:COPY:SEQ "INT:\MySequence.seq","INT:\Backup"</td>
                </tr>
            </tbody>
        </table>
        <ul type="disc" class="UL_Disc">
            <li class="IndentTight" value="1">The format for &lt;<i>source</i>&gt; and &lt;<i>destination</i>&gt; is "[[&lt;<i>drive</i>&gt;:]&lt;<i>path</i>&gt;]&lt;<i>file_name</i>&gt;", where &lt;<i>drive</i>&gt; can be INTernal or USB, and &lt;<i>path</i>&gt; is a file path.</li>
            <li class="IndentTight2" value="2">INTernal specifies the internal flash file system.USB specifies a front panel USB storage device.e.</li>
            <li class="IndentTight2" value="3">If &lt;<i>drive</i>&gt; is specified, &lt;<i>path</i>&gt; is interpreted as an absolute path. Absolute paths begin with "\" or "/" and start at the root folder of &lt;<i>drive</i>&gt;.</li>
            <li class="IndentTight2" value="4">If &lt;<i>drive</i>&gt; is omitted, &lt;<i>path</i>&gt; is relative to the folder specified by MMEMory:CDIRectory.  Relative paths must not begin with "\" or "/".</li>
            <li class="IndentTight2" value="5">Folder and file names cannot contain the following characters: \ / : * ? " &lt; &gt; |</li>
            <li class="IndentTight2" value="6">The combination of folder and file name cannot exceed 240 characters.</li>
            <li class="IndentTight2" value="7">The source file and folder and the destination folder must exist and cannot be marked hidden or system.</li>
            <li class="IndentTight2" value="8">If the destination file exists, it is overwritten, unless marked as hidden or system.</li>
            <li class="IndentTight2" value="9">To copy a sequence file to a sequence file of the same name in a different folder, you can specify just the &lt;<i>drive</i>&gt; and/or &lt;<i>path</i>&gt; for &lt;<i>destination</i>&gt;.</li>
        </ul>
        <h2><a name="kanchor231"></a><a name="MMEMory_DELete"></a>MMEMory:DELete &lt;<i>file</i>&gt;</h2>
        <p class="IndentTight">Deletes a file. To delete a folder, use MMEMory:RDIRectory.</p>
        <table style="mc-table-style: url('../RegTable.css');caption-side: top;margin-left: 0;margin-right: auto;" class="TableStyle-RegTable" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column1" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Parameter</th>
                    <th class="HeadD-Column1-Header1">Typical Return</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">Any valid file name, including file extension.</td>
                    <td class="BodyD-Column1-Body1">(none)</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyA-Column1-Body1" colspan="2">Delete the indicated file from the root directory of the internal flash file system:<br />MMEM:DEL "INT:\MySetup.sta"</td>
                </tr>
            </tbody>
        </table>
        <h2><a name="kanchor232"></a><a name="MMEMory_DOWNload_DATA"></a>MMEMory:DOWNload:DATA &lt;<i>binary_block</i>&gt;</h2>
        <p class="IndentTight">
            <p class="IndentTight">Downloads data from the host computer to a file in the instrument.  The filename must have been previously specified by <a href="#MMEMory_DOWNload_FNAMe">MMEMory:DOWNload:FNAMe</a>.  </p>
            <p class="IndentTight">The data in &lt;<i>binary_block</i>&gt; is written to the select file, and any data previously stored in the file is lost.</p>
        </p>
        <table style="mc-table-style: url('../RegTable.css');caption-side: top;margin-left: 0;margin-right: auto;" class="TableStyle-RegTable" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column1" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Parameter</th>
                    <th class="HeadD-Column1-Header1">Typical Return</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">Any IEEE-488 definite or indefinite block</td>
                    <td class="BodyD-Column1-Body1">(none)</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyA-Column1-Body1" colspan="2">Writes the word "Hello" to the file "\Myfile" on internal storage.<br />MMEM:DOWN:FNAM "INT:\Myfile"<br />MMEM:DOWN:DATA #15Hello</td>
                </tr>
            </tbody>
        </table>
        <h2><a name="kanchor233"></a><a name="MMEMory_DOWNload_FNAMe"></a>MMEMory:DOWNload:FNAMe &lt;<i>filename</i>&gt;</h2>
        <p class="IndentTight">
            <p>Creates or opens the specified filename prior to writing data to that file with  <a href="#MMEMory_DOWNload_DATA">MMEMory:DOWNload:DATA</a>.</p>
        </p>
        <table style="mc-table-style: url('../RegTable.css');caption-side: top;margin-left: 0;margin-right: auto;" class="TableStyle-RegTable" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column1" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Parameter</th>
                    <th class="HeadD-Column1-Header1">Typical Return</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">Any valid file name</td>
                    <td class="BodyD-Column1-Body1">
                        <p>(none)</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyA-Column1-Body1" colspan="2">Write the word "Hello" to the file "\Myfile" on the internal flash file system:<br />MMEM:DOWN:FNAM "INT:\Myfile"MMEM:DOWN:DATA #15Hello</td>
                </tr>
            </tbody>
        </table>
        <h2><a name="kanchor234"></a><a name="MMEMory_LOAD_ALL"></a>MMEMory:LOAD:ALL &lt;<i>filename</i>&gt;<br /><br /><a name="kanchor235"></a><a name="MMEMory_STORe_ALL"></a>MMEMory:STORe:ALL &lt;<i>filename</i>&gt;</h2>
        <p class="IndentTight">Loads or saves a complete instrument setup, using a named file on the mass storage.</p>
        <table style="mc-table-style: url('../RegTable.css');caption-side: top;margin-left: 0;margin-right: auto;" class="TableStyle-RegTable" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column1" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Parameter</th>
                    <th class="HeadD-Column1-Header1">Typical Return</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">Any valid file name on current mass storage directory</td>
                    <td class="BodyD-Column1-Body1">(none)</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyA-Column1-Body1" colspan="2">
                        <p colspan="2">Store instrument setup to file named "completeSetup.all" on internal storage:<br />MMEM:STOR:ALL "INT:\completeSetup.all"</p>
                        <p colspan="2">Load a complete instrument setup from the file in internal mass memory.
<br />MMEM:LOAD:ALL "INT:\completeSetup.all"<br /></p>
                    </td>
                </tr>
            </tbody>
        </table>
        <ul>
            <li class="IndentTight" value="1">These commands allow you to duplicate instrument conditions from some previous time.</li>
            <li class="IndentTight" value="2">This command loads the current instrument setup (such as is used by <a href="IEEE-488_Subsystem.htm#SAV">*SAV</a> and <a href="IEEE-488_Subsystem.htm#RCL">*RCL</a>).</li>
            <li class="IndentTight" value="3">Instrument setup files used by these commands contain much more than the state files used by *SAV and *RCL. They also contain stored states and arbitrary waveforms, GPIB and LAN parameters, number format, beep on/off, display options, and help language.</li>
        </ul>
        <ul type="disc" class="UL_Disc">
            <li class="IndentTight" value="1">If the destination file exists, it is overwritten, unless marked as hidden or system.</li>
        </ul>
        <h2><a name="kanchor236"></a><a name="MMEMory_LOAD_DATA"></a>MMEMory:LOAD:DATA[1|2] &lt;<i>filename</i>&gt;</h2>
        <p class="IndentTight">Loads the specified arb segment(.arb/.barb) or arb sequence (.seq) file in INTERNAL or USB memory into volatile memory for the specified channel.</p>
        <table style="mc-table-style: url('../RegTable.css');caption-side: top;margin-left: 0;margin-right: auto;" class="TableStyle-RegTable" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column1" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Parameter</th>
                    <th class="HeadD-Column1-Header1">Typical Return</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">Any valid file name, as described below.</td>
                    <td class="BodyD-Column1-Body1">
                        <p>(none)</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyA-Column1-Body1" colspan="2">
                        <p colspan="2">Load an arbitrary waveform segment from the internal drive into volatile memory for channel 1 and selects it for use.<br />MMEM:LOAD:DATA "Int:\Builtin\HAVERSINE.arb"<br />FUNC:ARB "Int:\Builtin\HAVERSINE.ARB"</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <ul>
            <li class="IndentTight" value="1">If a sequence file (.seq) is specified, all the arbitrary waveforms defined in the file are loaded.</li>
            <li class="IndentTight" value="2">If the waveform referenced by &lt;<i>filename</i>&gt; has already been loaded, the instrument will generate error number +786, "Specified arb waveform already exists".  Deleting an existing waveform requires clearing the waveform non-volatile memory with <a href="DATA_Subsystem.htm#DATA_VOLatile_CLEar">DATA:VOLatile:CLEar</a>.</li>
        </ul>
        <h2><a name="kanchor237"></a><a name="MMEMory_LOAD_LIST"></a>MMEMory:LOAD:LIST[1|2] &lt;<i>filename</i>&gt;<br /><br /><a name="kanchor238"></a><a name="MMEMory_STORe_LIST"></a>MMEMory:STORe:LIST[1|2] &lt;<i>filename</i>&gt;</h2>
        <p class="IndentTight">Loads or stores a frequency list file (.lst).</p>
        <table style="mc-table-style: url('../RegTable.css');caption-side: top;margin-left: 0;margin-right: auto;" class="TableStyle-RegTable" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column1" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Parameter</th>
                    <th class="HeadD-Column1-Header1">Typical Return</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">Any valid file name on the mass memory device</td>
                    <td class="BodyD-Column1-Body1">
                        <p>(none)</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyA-Column1-Body1" colspan="2">
                        <p colspan="2">Store the current frequency list to a LIST file on internal storage:<br />MMEM:STOR:LIST "INT:\FreqList.lst"</p>
                        <p colspan="2">Load a LIST file on the internal storage mass memory system (file named FreqList.lst).<br />MMEM:LOAD:LIST "INT:\FreqList.lst"</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <ul type="disc" class="UL_Disc">
            <li class="IndentTight" value="1">A frequency list controls frequency in <a href="FREQuency_Subsystem.htm#FREQuency_MODE">FREQ:MODE LIST</a>, rapidly changing to the next frequency in the list when a trigger event is received.</li>
            <li class="IndentTight" value="2">A frequency list file contains a comma-separated sequence of ASCII numbers, with the first number representing the number of frequencies in the list:</li>
        </ul>
        <blockquote>
            <p>3, 100.000000, 1000.000000, 550.000000</p>
        </blockquote>
        <ul type="disc" class="UL_Disc">
            <li class="IndentTight" value="1">If the destination file exists, it is overwritten, unless marked as hidden or system.</li>
        </ul>
        <h2><a name="kanchor239"></a><a name="MMEMory_LOAD_STATe"></a>MMEMory:LOAD:STATe &lt;<i>filename</i>&gt;<br /><br /><a name="kanchor240"></a><a name="MMEMory_STORe_STATe"></a>MMEMory:STORe:STATe &lt;<i>filename</i>&gt;</h2>
        <p class="IndentTight">Stores the current instrument state to a state file.  The file name optionally includes the folder name and the .sta file extension.</p>
        <table style="mc-table-style: url('../RegTable.css');caption-side: top;margin-left: 0;margin-right: auto;" class="TableStyle-RegTable" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column1" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Parameter</th>
                    <th class="HeadD-Column1-Header1">Typical Return</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">Any valid file name on the current directory</td>
                    <td class="BodyD-Column1-Body1">
                        <p>(none)</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyA-Column1-Body1" colspan="2">Store the current instrument state to the state file MyFreqMeas.sta in the root directory of the internal flash file system.<br />MMEM:STOR:STAT "INT:\MySetup"<br /><br />Load the instrument state from MySetup.sta in the root directory of the internal storage.<br />MMEM:LOAD:STAT "INT:\MySetup.sta"</td>
                </tr>
            </tbody>
        </table>
        <h2><a name="kanchor241"></a><a name="MMEMory_MOVE"></a>MMEMory:MOVE &lt;<i>file1</i>&gt;,&lt;<i>file2</i>&gt;</h2>
        <p class="IndentTight">Moves and/or renames &lt;<i>file1</i>&gt; to &lt;<i>file2</i>&gt;.  The file names must include the file extension.</p>
        <table style="mc-table-style: url('../RegTable.css');caption-side: top;margin-left: 0;margin-right: auto;" class="TableStyle-RegTable" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column1" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Parameter</th>
                    <th class="HeadD-Column1-Header1">Typical Return</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">Both files may be any valid file name</td>
                    <td class="BodyD-Column1-Body1">(none)</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyA-Column1-Body1" colspan="2">
                        <p colspan="2">Move the state file MySetup.sta from the currently selected default directory to the folder "Backup" on the internal flash file system;<br />MMEM:MOVE "MySetup.sta","INT:\Backup"</p>
                        <p colspan="2">Rename the arbitrary waveform arbMonday on the USB&#160;drive to the name arbTuesday.<br />MMEM:MOVE "USB:\arbMonday", "USB:\arbTuesday"</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <ul>
            <li class="IndentTight" value="1">To simply rename a file, specify the same folder for &lt;<i>file1</i>&gt; and &lt;<i>file2</i>&gt;.</li>
            <li class="IndentTight" value="2">To move a file to a file of the same name in a different folder, you can specify just the &lt;<i>drive</i>&gt;:&lt;<i>path</i>&gt; for &lt;<i>file2</i>&gt;.</li>
        </ul>
        <h2><a name="kanchor242"></a><a name="MMEMory_STORe_DATA"></a>MMEMory:STORe:DATA[1|2]<i>&#160;&lt;<i>filename</i>&gt;</i></h2>
        <p class="IndentTight">Stores the specified arb segment(.arb/.barb) or arb sequence (.seq) data in the channel specified volatile memory (default, channel 1) in INTERNAL or USB memory.</p>
        <table style="mc-table-style: url('../RegTable.css');caption-side: top;margin-left: 0;margin-right: auto;" class="TableStyle-RegTable" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column1" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Parameter</th>
                    <th class="HeadD-Column1-Header1">Typical Return</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">Any valid file name</td>
                    <td class="BodyD-Column1-Body1">
                        <p>(none)</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyA-Column1-Body1" colspan="2">Store an arbitrary sequence loaded in volatile memory on channel 1 to the internal drive.
MMEM:STOR:DATA "INT:\Sequence1.seq"</td>
                </tr>
            </tbody>
        </table>
        <ul type="disc" class="UL_Disc">
            <li class="IndentTight" value="1">When you store an arbitrary waveform segment or sequence (<a href="#MMEMory_STORe_DATA">MMEMory:STORe:DATA[1|2]</a>), the instrument's current settings (voltage values, sample rate, filter type, and so on) are stored in the segment or sequence file. When you play the file for the first time with <a href="#FUNCtion_ARBitrary">FUNCtion:ARBitrary</a>, these settings are loaded and override the instrument's current settings. If you have manually edited a segment or sequence file such that the instrument settings have been removed, the instrument settings will not be changed when you execute <a href="#FUNCtion_ARBitrary">FUNCtion:ARBitrary</a>.</li>
            <li class="IndentTight2" value="2">If the destination file exists, it is overwritten, unless marked as hidden or system.</li>
            <li class="IndentTight" value="3">If an arbitrary waveform sequence file (.seq) is specified, all the arbitrary waveform segment file names associated with the sequence are stored in the file.</li>
            <li class="IndentTight" value="4">Command will error if the specified arbitrary waveform segment or arbitrary waveform sequence is not found in volatile memory.</li>
        </ul>
        <h2><a name="kanchor243"></a><a name="MMEMory_UPLoad"></a>MMEMory:UPLoad? &lt;<i>filename</i>&gt;</h2>
        <p class="IndentTight">Uploads the contents of a file from the instrument to the host computer.</p>
        <table style="mc-table-style: url('../RegTable.css');caption-side: top;margin-left: 0;margin-right: auto;" class="TableStyle-RegTable" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column1" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Parameter</th>
                    <th class="HeadD-Column1-Header1">Typical Return</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">Any valid file name</td>
                    <td class="BodyD-Column1-Body1">IEEE 488.2 definite-length block</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyA-Column1-Body1" colspan="2">The following command uploads the contents of the state file "Myfile.sta" in the root directory of the internal flash file system to the host computer:<br />MMEM:UPL? "INT:\Myfile.sta"</td>
                </tr>
            </tbody>
        </table>
        
    </body>
</html>